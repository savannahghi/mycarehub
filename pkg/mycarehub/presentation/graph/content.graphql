extend type Query {
  getContent(categoryID: Int, limit: String!): Content!
  listContentCategories: [ContentItemCategory!]!
  getUserBookmarkedContent(clientID: String!): Content
  checkIfUserHasLikedContent(clientID: String!, contentID: Int!): Boolean!
  checkIfUserBookmarkedContent(clientID: String!, contentID: Int!): Boolean!
  getFAQs(flavour: Flavour!): Content!
}

extend type Mutation {
  shareContent(input: ShareContentInput!): Boolean!
  bookmarkContent(clientID: String!, contentItemID: Int!): Boolean!
  UnBookmarkContent(clientID: String!, contentItemID: Int!): Boolean!
  likeContent(clientID: String!, contentID: Int!): Boolean!
  unlikeContent(clientID: String!, contentID: Int!): Boolean!
  viewContent(clientID: String!, contentID: Int!): Boolean!
}

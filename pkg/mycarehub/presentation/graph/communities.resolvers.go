package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.40

import (
	"context"

	"github.com/savannahghi/feedlib"
	"github.com/savannahghi/mycarehub/pkg/mycarehub/application/dto"
	"github.com/savannahghi/mycarehub/pkg/mycarehub/domain"
)

// CreateCommunity is the resolver for the createCommunity field.
func (r *mutationResolver) CreateCommunity(ctx context.Context, input *dto.CommunityInput) (*domain.Community, error) {
	r.checkPreconditions()

	return r.mycarehub.Community.CreateCommunity(ctx, input)
}

// SetPusher is the resolver for the setPusher field.
func (r *mutationResolver) SetPusher(ctx context.Context, flavour feedlib.Flavour) (bool, error) {
	r.checkPreconditions()

	return r.mycarehub.Community.SetPusher(ctx, flavour)
}

// AuthenticateUserToCommunity is the resolver for the authenticateUserToCommunity field.
func (r *mutationResolver) AuthenticateUserToCommunity(ctx context.Context) (*domain.CommunityProfile, error) {
	return r.mycarehub.Community.AuthenticateUserToCommunity(ctx)
}

// ListRooms is the resolver for the listRooms field.
func (r *queryResolver) ListRooms(ctx context.Context) ([]string, error) {
	r.checkPreconditions()

	return r.mycarehub.Community.ListCommunities(ctx)
}

// SearchUsers is the resolver for the searchUsers field.
func (r *queryResolver) SearchUsers(ctx context.Context, limit *int, searchTerm string) (*domain.MatrixUserSearchResult, error) {
	r.checkPreconditions()

	return r.mycarehub.Community.SearchUsers(ctx, limit, searchTerm)
}

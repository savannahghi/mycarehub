name: Multitenant myCareHub Deployment

on: [push]

env:
  GOOGLE_CLOUD_PROJECT: ${{ secrets.GOOGLE_CLOUD_PROJECT }}
  FIREBASE_WEB_API_KEY: ${{ secrets.FIREBASE_WEB_API_KEY }}
  ENVIRONMENT: ${{ secrets.ENVIRONMENT }}
  PORT: ${{ secrets.PORT }}
  REPOSITORY: ${{ secrets.REPOSITORY }}
  SERVICE_HOST: ${{ secrets.SERVICE_HOST }}
  GOOGLE_PROJECT_NUMBER: ${{ secrets.GOOGLE_PROJECT_NUMBER }}
  JWT_KEY: ${{ secrets.JWT_KEY }}
  GCR_NAME: ${{ secrets.GCR_NAME }}
  DATABASE_REGION: ${{ secrets.PROD_DATABASE_REGION }}
  DATABASE_INSTANCE: ${{ secrets.PROD_DATABASE_INSTANCE }}
  DEFAULT_ORG_ID: ${{ secrets.DEFAULT_ORG_ID }}
  PRO_INVITE_LINK: ${{ secrets.PRO_INVITE_LINK }}
  CONSUMER_INVITE_LINK: ${{ secrets.CONSUMER_INVITE_LINK }}
  GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
  GOOGLE_CLOUD_STORAGE_URL: ${{ secrets.GOOGLE_CLOUD_STORAGE_URL }}
  MYCAREHUB_ADMIN_EMAIL: ${{ secrets.MYCAREHUB_ADMIN_EMAIL }}
  POSTGRES_DB: ${{ secrets.DB_NAME }}
  POSTGRES_USER: ${{ secrets.MYCAREHUB_DB_USER }}
  POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
  POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
  POSTGRES_PASSWORD: "${{ secrets.MYCAREHUB_DB_PASS }}"
  MAILGUN_API_KEY: ${{ secrets.MAILGUN_API_KEY }}
  MAILGUN_DOMAIN: ${{ secrets.MAILGUN_DOMAIN }}
  MAILGUN_FROM: ${{ secrets.MAILGUN_FROM }}
  SENSITIVE_CONTENT_SECRET_KEY: ${{ secrets.SENSITIVE_CONTENT_SECRET_KEY }}
  CONTENT_API_URL: ${{ secrets.CONTENT_API_URL }}
  CONTENT_SERVICE_BASE_URL: ${{ secrets.CONTENT_SERVICE_BASE_URL }}
  DJANGO_AUTHORIZATION_TOKEN: ${{ secrets.DJANGO_AUTHORIZATION_TOKEN }}
  PIN_EXPIRY_DAYS: ${{ secrets.PIN_EXPIRY_DAYS }}
  INVITE_PIN_EXPIRY_DAYS: ${{ secrets.INVITE_PIN_EXPIRY_DAYS }}
  SURVEYS_SYSTEM_EMAIL: ${{ secrets.SURVEYS_SYSTEM_EMAIL }}
  SURVEYS_SYSTEM_PASSWORD: ${{ secrets.SURVEYS_SYSTEM_PASSWORD }}
  SURVEYS_BASE_URL: ${{ secrets.SURVEYS_BASE_URL }}
  CONSUMER_APP_IDENTIFIER: ${{ secrets.CONSUMER_APP_IDENTIFIER }}
  PRO_APP_IDENTIFIER: ${{ secrets.PRO_APP_IDENTIFIER }}
  CONSUMER_APP_NAME: ${{ secrets.CONSUMER_APP_NAME }}
  PRO_APP_NAME: ${{ secrets.PRO_APP_NAME }}
  SIL_COMMS_BASE_URL: ${{ secrets.SIL_COMMS_BASE_URL }}
  SIL_COMMS_EMAIL: ${{ secrets.SIL_COMMS_EMAIL }}
  SIL_COMMS_PASSWORD: ${{ secrets.SIL_COMMS_PASSWORD }}
  SIL_COMMS_SENDER_ID: ${{ secrets.SIL_COMMS_SENDER_ID }}
  TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
  TWILIO_ACCOUNT_AUTH_TOKEN: ${{ secrets.TWILIO_ACCOUNT_AUTH_TOKEN }}
  TWILIO_SMS_NUMBER: ${{ secrets.TWILIO_SMS_NUMBER }}
  SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
  DEFAULT_PROGRAM_ID: ${{ secrets.DEFAULT_PROGRAM_ID }}
  MATRIX_BASE_URL: ${{ secrets.MATRIX_BASE_URL }}
  MCH_MATRIX_USER: ${{ secrets.MCH_MATRIX_USER }}
  MCH_MATRIX_PASSWORD: ${{ secrets.MCH_MATRIX_PASSWORD }}
  MATRIX_DOMAIN: ${{ secrets.MATRIX_DOMAIN }}
  FOSITE_SECRET: ${{ secrets.FOSITE_SECRET }}
  MYCAREHUB_CLIENT_ID: ${{ secrets.MYCAREHUB_CLIENT_ID }}
  MYCAREHUB_CLIENT_SECRET: ${{ secrets.MYCAREHUB_CLIENT_SECRET }}
  MYCAREHUB_INTROSPECT_URL: ${{ secrets.MYCAREHUB_INTROSPECT_URL }}
  MYCAREHUB_TOKEN_URL: ${{ secrets.MYCAREHUB_TOKEN_URL }}
  MYCAREHUB_PRO_APP_ID: ${{ secrets.MYCAREHUB_PRO_APP_ID }}
  MYCAREHUB_CONSUMER_APP_ID: ${{ secrets.MYCAREHUB_CONSUMER_APP_ID }}
  DATABASE_INSTANCE_CONNECTION_NAME: ${{ secrets.DATABASE_INSTANCE_CONNECTION_NAME }}
  NAMESPACE: ${{ secrets.NAMESPACE }}
  APPNAME: ${{ secrets.APPNAME }}
  APPDOMAIN: ${{ secrets.APPDOMAIN }}
  GKE_ZONE: ${{ secrets.GKE_ZONE }}
  GKE_PROJECT: ${{ secrets.GKE_PROJECT }}
  CLUSTER_NAME: ${{ secrets.CLUSTER_NAME }}
  APP_REPLICA_COUNT: ${{ secrets.APP_REPLICA_COUNT }}
  DOCKER_IMAGE_TAG: eu.gcr.io/${{ secrets.GOOGLE_CLOUD_PROJECT }}/${{ secrets.GCR_NAME }}:${{  github.sha }}
  HEALTH_CRM_AUTH_SERVER_ENDPOINT: ${{ secrets.HEALTH_CRM_AUTH_SERVER_ENDPOINT }}
  HEALTH_CRM_CLIENT_ID: ${{ secrets.HEALTH_CRM_CLIENT_ID }}
  HEALTH_CRM_CLIENT_SECRET: ${{ secrets.HEALTH_CRM_CLIENT_SECRET }}
  HEALTH_CRM_GRANT_TYPE: ${{ secrets.HEALTH_CRM_GRANT_TYPE }}
  HEALTH_CRM_USERNAME: ${{ secrets.HEALTH_CRM_USERNAME }}
  HEALTH_CRM_PASSWORD: ${{ secrets.HEALTH_CRM_PASSWORD }}
  HEALTH_CRM_BASE_URL: ${{ secrets.HEALTH_CRM_BASE_URL }}
  PGBOUNCER_POOL_MODE: ${{ secrets.PGBOUNCER_POOL_MODE }}
  JAEGER_COLLECTOR_ENDPOINT: ${{ secrets.JAEGER_COLLECTOR_ENDPOINT }}
  DEFAULT_FACILITY_MFL_CODE: ${{ secrets.DEFAULT_FACILITY_MFL_CODE }}
  SENTRY_TRACE_SAMPLE_RATE: ${{ secrets.SENTRY_TRACE_SAMPLE_RATE }}

jobs:
  deploy_to_multitenant_staging:
    name: Deploy multitenant staging server to google kubernetes engine
    if: ${{ github.ref == 'refs/heads/develop-v2'}}
    strategy:
      matrix:
        go-version: [1.21.x]
        environment: [multitenant-staging, sil-uat]

    runs-on: ubuntu-latest
    environment:
      name: ${{ matrix.environment }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - id: "auth"
        uses: "google-github-actions/auth@v0"
        with:
          credentials_json: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
          project_id: ${{ secrets.GOOGLE_CLOUD_PROJECT }}

      # Configure Docker to use the gcloud command-line tool as a credential
      # helper for authentication
      - run: |-
          gcloud --quiet auth configure-docker

      - name: Build and Push Image
        run: |-
          docker build -t eu.gcr.io/${{ secrets.GOOGLE_CLOUD_PROJECT }}/${{ secrets.GCR_NAME }}:$GITHUB_SHA .
          docker push eu.gcr.io/${{ secrets.GOOGLE_CLOUD_PROJECT }}/${{ secrets.GCR_NAME }}:$GITHUB_SHA

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Install migrate cli
        run: |
          go install -tags 'postgres' github.com/golang-migrate/migrate/v4/cmd/migrate@v4.15.2

      - name: Install cloudsql proxy
        uses: mattes/gce-cloudsql-proxy-action@v1
        with:
          creds: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
          instance: ${{ secrets.GOOGLE_CLOUD_PROJECT }}:${{ secrets.PROD_DATABASE_REGION }}:${{ secrets.PROD_DATABASE_INSTANCE }}

      - name: Run migrations
        env:
          POSTGRES_HOST: 127.0.0.1
          POSTGRES_PORT: 5432
        run: |
          export POSTGRESQL_URL="postgres://${{ secrets.MYCAREHUB_DB_USER }}:${{ secrets.MYCAREHUB_DB_PASS }}@$POSTGRES_HOST:$POSTGRES_PORT/${{ secrets.DB_NAME }}?sslmode=disable"
          migrate -database ${POSTGRESQL_URL} -path db/migrations up

      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

      - uses: google-github-actions/get-gke-credentials@c02be8662df01db62234e9b9cff0765d1c1827ae
        with:
          cluster_name: ${{ env.CLUSTER_NAME }}
          location: ${{ env.GKE_ZONE }}
          credentials: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

      - name: Deploy to Google Kubernetes engine
        shell: bash
        run: cd deploy/ && cat deploy.sh && sh deploy.sh

  deploy_to_multitenant_prod:
    name: Deploy multitenant prod server to google kubernetes engine
    if: ${{ github.ref == 'refs/heads/main-v2' }}
    strategy:
      matrix:
        environment: [multitenant-prod, sil-prod]

    runs-on: ubuntu-latest
    environment:
      name: ${{ matrix.environment }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - id: "auth"
        uses: "google-github-actions/auth@v0"
        with:
          credentials_json: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
          project_id: ${{ secrets.GOOGLE_CLOUD_PROJECT }}

      # Configure Docker to use the gcloud command-line tool as a credential
      # helper for authentication
      - run: |-
          gcloud --quiet auth configure-docker

      - name: Build and Push Image
        run: |-
          docker build -t eu.gcr.io/${{ secrets.GOOGLE_CLOUD_PROJECT }}/${{ secrets.GCR_NAME }}:$GITHUB_SHA .
          docker push eu.gcr.io/${{ secrets.GOOGLE_CLOUD_PROJECT }}/${{ secrets.GCR_NAME }}:$GITHUB_SHA

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Install migrate cli
        run: |
          go install -tags 'postgres' github.com/golang-migrate/migrate/v4/cmd/migrate@v4.15.2

      - name: Install cloudsql proxy
        uses: mattes/gce-cloudsql-proxy-action@v1
        with:
          creds: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
          instance: ${{ secrets.GOOGLE_CLOUD_PROJECT }}:${{ secrets.PROD_DATABASE_REGION }}:${{ secrets.PROD_DATABASE_INSTANCE }}

      - name: Run migrations
        env:
          POSTGRES_HOST: 127.0.0.1
          POSTGRES_PORT: 5432
        run: |
          export POSTGRESQL_URL="postgres://${{ secrets.MYCAREHUB_DB_USER }}:${{ secrets.MYCAREHUB_DB_PASS }}@$POSTGRES_HOST:$POSTGRES_PORT/${{ secrets.DB_NAME }}?sslmode=disable"
          migrate -database ${POSTGRESQL_URL} -path db/migrations up

      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

      - uses: google-github-actions/get-gke-credentials@c02be8662df01db62234e9b9cff0765d1c1827ae
        with:
          cluster_name: ${{ env.CLUSTER_NAME }}
          location: ${{ env.GKE_ZONE }}
          credentials: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

      - name: Deploy to Google Kubernetes engine
        shell: bash
        run: cd deploy/ && cat deploy.sh && sh deploy.sh
